/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UpdatePasswordImport } from './routes/update-password'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const HistoryLazyImport = createFileRoute('/history')()
const GenerateLazyImport = createFileRoute('/generate')()
const ExampleLazyImport = createFileRoute('/example')()
const NewslettersNewsletterIdLazyImport = createFileRoute(
  '/newsletters/$newsletterId',
)()

// Create/Update Routes

const HistoryLazyRoute = HistoryLazyImport.update({
  path: '/history',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/history.lazy').then((d) => d.Route))

const GenerateLazyRoute = GenerateLazyImport.update({
  path: '/generate',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/generate.lazy').then((d) => d.Route))

const ExampleLazyRoute = ExampleLazyImport.update({
  path: '/example',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/example.lazy').then((d) => d.Route))

const UpdatePasswordRoute = UpdatePasswordImport.update({
  path: '/update-password',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NewslettersNewsletterIdLazyRoute =
  NewslettersNewsletterIdLazyImport.update({
    path: '/newsletters/$newsletterId',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/newsletters/$newsletterId.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/update-password': {
      id: '/update-password'
      path: '/update-password'
      fullPath: '/update-password'
      preLoaderRoute: typeof UpdatePasswordImport
      parentRoute: typeof rootRoute
    }
    '/example': {
      id: '/example'
      path: '/example'
      fullPath: '/example'
      preLoaderRoute: typeof ExampleLazyImport
      parentRoute: typeof rootRoute
    }
    '/generate': {
      id: '/generate'
      path: '/generate'
      fullPath: '/generate'
      preLoaderRoute: typeof GenerateLazyImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryLazyImport
      parentRoute: typeof rootRoute
    }
    '/newsletters/$newsletterId': {
      id: '/newsletters/$newsletterId'
      path: '/newsletters/$newsletterId'
      fullPath: '/newsletters/$newsletterId'
      preLoaderRoute: typeof NewslettersNewsletterIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LoginRoute,
  ResetPasswordRoute,
  UpdatePasswordRoute,
  ExampleLazyRoute,
  GenerateLazyRoute,
  HistoryLazyRoute,
  NewslettersNewsletterIdLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/reset-password",
        "/update-password",
        "/example",
        "/generate",
        "/history",
        "/newsletters/$newsletterId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/update-password": {
      "filePath": "update-password.tsx"
    },
    "/example": {
      "filePath": "example.lazy.tsx"
    },
    "/generate": {
      "filePath": "generate.lazy.tsx"
    },
    "/history": {
      "filePath": "history.lazy.tsx"
    },
    "/newsletters/$newsletterId": {
      "filePath": "newsletters/$newsletterId.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
